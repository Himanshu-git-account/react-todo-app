{"version":3,"sources":["TmTodoItem.js","AddTodo.js","TmTodoList.js","About.js","Nav.js","App.js","serviceWorker.js","index.js"],"names":["TmTodoItem","getStyle","textDecoration","_this","props","todo","status","color","markCompleted","console","log","_this$props$todo","this","id","title","react_default","a","createElement","className","style","type","onChange","bind","onClick","markDeleted","React","Component","AddTodo","state","handleChange","e","setState","Object","defineProperty","target","name","value","handleSubmit","preventDefault","addTodo","TmTodoList","todos","src_AddTodo","map","src_TmTodoItem","key","About","Nav","react_router_dom","to","App","uuid","v4","Details","newTodos","filter","toConsumableArray","newTodo","concat","_this2","src_Nav","react_router","exact","path","render","Fragment","src_TmTodoList_0","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af3da443.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './TmTodoList.css'\r\n\r\nclass TmTodoItem extends React.Component{\r\n    getStyle = () => {\r\n        return{\r\n            textDecoration: this.props.todo.status ? 'line-through' : 'none',\r\n            color: this.props.todo.status ? 'grey' : 'chocolate'\r\n        }\r\n\r\n        // if(this.props.todo.status==\"true\"){\r\n        //     return {\r\n        //         textDecoration : 'line-through',\r\n        //         color:'grey'\r\n        //     }\r\n        // }\r\n        // else{\r\n        //     return {\r\n        //         textDecoration : 'none'\r\n        //     }\r\n        // }\r\n    }\r\n    markCompleted= ()=>{\r\n        console.log(\"working fine from item\");\r\n    }\r\n    \r\n    render(){\r\n        const {id,title} = this.props.todo;\r\n        return(\r\n            <div className='TmTodoItem' style={this.getStyle()}>\r\n                <p><input \r\n                type=\"checkbox\" \r\n                onChange={this.props.markCompleted.bind(this,id)}\r\n                />\r\n               {title}\r\n               <button \r\n               type=\"button\" \r\n               className=\"DeleteButton\"\r\n               onClick={this.props.markDeleted.bind(this,id)}>X</button>\r\n               </p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default TmTodoItem","import React from 'react';\r\nimport './TmTodoList.css';\r\n\r\nclass AddTodo extends React.Component{\r\n\r\n    state = {\r\n        title:''\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form className=\"AddForm\">\r\n                    <input \r\n                    type=\"text\" \r\n                    name=\"title\"\r\n                    value={this.state.title}\r\n                    onChange={this.handleChange}\r\n                    />\r\n                    <input \r\n                    type=\"submit\" \r\n                    value=\"Submit\"\r\n                    onClick={this.handleSubmit}/>\r\n                </form>\r\n            </div>\r\n        )\r\n            \r\n        \r\n    }\r\n}\r\n\r\nexport default AddTodo","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport TmTodoItem from './TmTodoItem'\r\nimport AddTodo from './AddTodo';\r\n\r\nclass TmTodoList extends React.Component{\r\n   \r\n    render(){\r\n        console.log(this.props.todos);\r\n        return(\r\n            <div>\r\n                <h1>ToDo List App</h1>\r\n                <AddTodo addTodo={this.props.addTodo}/>\r\n               {this.props.todos.map((todo)=>(\r\n                   <TmTodoItem \r\n                   key={todo.id} \r\n                   todo={todo} \r\n                   markCompleted={this.props.markCompleted}\r\n                   markDeleted={this.props.markDeleted}/>\r\n               ))}\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default TmTodoList","import React from 'react';\r\nimport './TmTodoList.css';\r\n\r\nclass About extends React.Component{\r\n   \r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>This is my about page.This is my first step to github.\r\n                </h1>    \r\n\r\n                <h5>Sorry for the worst CSS ever</h5>\r\n                <h5>Promise my next project will be better</h5>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default About","import React from 'react';\r\nimport './TmTodoList.css';\r\nimport { Link } from 'react-router-dom';\r\nclass Nav extends React.Component{\r\n   \r\n    render(){\r\n        return(\r\n            <nav>\r\n                <ul className=\"nav-Links\">\r\n                    <Link to=\"/\"><li >Home</li></Link>\r\n                    <Link to=\"/about\"><li >About</li></Link>\r\n                    </ul>   \r\n            </nav>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Nav","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TmTodoList from './TmTodoList';\nimport './App.css';\nimport uuid from 'uuid';\nimport About from './About';\nimport Nav from './Nav';\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom';\n\nclass App extends React.Component {\n  state = {\n    todos: [\n        {\n            id:uuid.v4(),\n            title:'Learn React',\n            Details:'Detail no 1',\n            status:false\n        },\n        {\n            id:uuid.v4(),\n            title:'come to office on time',\n            Details:'Detail no 2',\n            status:false\n        },\n        {\n            id:uuid.v4(),\n            title:'Sleep early',\n            Details:'Detail no 3',\n            status:false\n        },\n        {\n            id:uuid.v4(),\n            title:'Sleep well',\n            Details:'Detail no 4',\n            status:false\n        },\n        {\n            id:uuid.v4(),\n            title:'Work hard',\n            Details:'Detail no 5',\n            status:false\n        }\n    ]\n}\nmarkCompleted= (id)=>{\n       this.setState({todos: this.state.todos.map((todo)=>{\n            if(todo.id==id){\n                todo.status=!todo.status;\n            }\n            return todo;\n       })});\n    }\n    markDeleted= (id)=>{\n        const newTodos= this.state.todos.filter((todo)=>{\n            return todo.id !== id;\n        });\n        this.setState({\n            todos : [...newTodos]\n        })\n    }\n    addTodo = (title) =>{\n        const newTodo={\n            id:uuid.v4(),\n            title,\n            status:false\n        }\n        this.setState({\n            todos:[...this.state.todos,newTodo]\n        })\n    }\n    \n  render(){\n    return (\n      <div className=\"App\">\n        <Router>\n        <Nav />\n        <Route exact path=\"/\" render={props =>(\n            <React.Fragment>\n <TmTodoList todos={this.state.todos} \n        markCompleted={this.markCompleted} \n        markDeleted={this.markDeleted} \n        addTodo={this.addTodo}/>\n                </React.Fragment>\n        )} />\n       \n        <Route path=\"/about\" component={About} />\n        \n        </Router>\n      </div>\n    );\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport TmTodoList from './TmTodoList'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}